# SailTime Shortcut Structure Diagram

```
┌─ Shortcut Start
│  ├─ Receive Input
│  ├─ Get Shortcut Input
│  ├─ Set Boat Name to "Time Out"
│  └─ Set Location to "Horn Point Marina..."
│
├─ EMAIL TYPE DETECTION (Steps 5-9)
│  │
│  ├─ If (Input contains "Reservation Canceled")
│  │  └─ Set Email Type to "Cancellation"
│  │
│  └─ Otherwise
│     ├─ If (Input contains "Confirmation Has Opened")
│     │  └─ Set Email Type to "Confirmation Reminder"
│     │
│     └─ Otherwise
│        ├─ If (Input contains "Boat Reservation Time Change")
│        │  └─ Set Email Type to "Time Change"
│        │
│        └─ Otherwise
│           └─ Set Email Type to "New Reservation"
│
├─ MAIN PROCESSING SECTION (Steps 10+) ◄─── You add this part AFTER the email type detection
│  │
│  ├─ If (Email Type equals "Cancellation")
│  │  ├─ Extract cancellation date
│  │  ├─ Find calendar events
│  │  ├─ Delete events if found
│  │  └─ Delete related reminders
│  │
│  └─ Otherwise
│     ├─ If (Email Type equals "Confirmation Reminder")
│     │  ├─ Extract reservation details
│     │  ├─ Create confirmation task
│     │  └─ Create calendar reminder
│     │
│     └─ Otherwise
│        ├─ If (Email Type equals "Time Change")
│        │  ├─ Find future events
│        │  └─ Update event times
│        │
│        └─ Otherwise (New Reservation)
│           ├─ Extract reservation info
│           ├─ Check for existing events
│           └─ Create events and tasks
│
└─ Shortcut End
```

## Key Points:

1. The EMAIL TYPE DETECTION section (Steps 5-9) consists of nested If statements that determine what type of email you're processing.

2. The MAIN PROCESSING SECTION (Step 10+) is a separate set of If statements that come AFTER the type detection, not nested within it.

3. Each branch of the MAIN PROCESSING SECTION handles a different email type with specific actions.

The structure is basically:
1. First determine what type of email this is
2. Then process the email based on its type

These are two separate logical sections that follow each other sequentially, not nested within each other.