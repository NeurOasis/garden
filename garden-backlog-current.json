[
  {
    "id": "1",
    "title": "NeurOasis Organization Setup",
    "description": "GitHub Teams organization with Scott + Andrew, proper permissions, $16/month",
    "project": "core",
    "priority": "P0",
    "status": "done",
    "created": "2025-05-26T19:30:00.000Z"
  },
  {
    "id": "2",
    "title": "Repository Forking Strategy Proven",
    "description": "Template validated 100% across 5 different project types with surgical cleanup",
    "project": "deploy",
    "priority": "P0",
    "status": "done",
    "created": "2025-05-26T19:30:00.000Z"
  },
  {
    "id": "3",
    "title": "All 5 Project Forks Deployed",
    "description": "sailing-tools, coffee-recipes, family-tools, budget-nodepad, action-organizer all live",
    "project": "deploy",
    "priority": "P0",
    "status": "done",
    "created": "2025-05-26T19:30:00.000Z"
  },
  {
    "id": "4",
    "title": "Core Repository Cleanup",
    "description": "Achieved <30% project knowledge, removed all personal contexts staging",
    "project": "core",
    "priority": "P0",
    "status": "done",
    "created": "2025-05-26T19:30:00.000Z"
  },
  {
    "id": "5",
    "title": "Chat Archaeology Process",
    "description": "Systematic extraction of insights from conversation history",
    "project": "core",
    "priority": "P1",
    "status": "backlog",
    "created": "2025-05-26T19:30:00.000Z"
  },
  {
    "id": "6",
    "title": "Automated Split Detection",
    "description": "Claude prompts for automatic repository management and split recommendations",
    "project": "core",
    "priority": "P1",
    "status": "backlog",
    "created": "2025-05-26T19:30:00.000Z"
  },
  {
    "id": "7",
    "title": "CIT System Optimization",
    "description": "Simplified naming without dates, version tracking system",
    "project": "core",
    "priority": "P1",
    "status": "todo",
    "created": "2025-05-26T19:30:00.000Z"
  },
  {
    "id": "8",
    "title": "Business Strategy Framework",
    "description": "Corporate entity setup, service positioning, revenue model",
    "project": "core",
    "priority": "P2",
    "status": "backlog",
    "created": "2025-05-26T19:30:00.000Z"
  },
  {
    "id": "9",
    "title": "Documentation & Automation Framework",
    "description": "Automated split detection, business entity planning, collaboration workflows, service positioning",
    "project": "core",
    "priority": "P1",
    "status": "backlog",
    "created": "2025-05-26T20:40:00.000Z"
  },
  {
    "id": "10",
    "title": "Production Deployment in Forked Repos",
    "description": "Build actual tools in focused repositories, test Andrew collaboration workflows",
    "project": "deploy",
    "priority": "P1",
    "status": "backlog",
    "created": "2025-05-26T20:40:00.000Z"
  },
  {
    "id": "11",
    "title": "Star Trek UI for Idea Capture",
    "description": "LCARS-style interface, Captain's Log theme, grayscale accessibility toggle",
    "project": "nodepad",
    "priority": "P1",
    "status": "todo",
    "created": "2025-05-26T20:40:00.000Z"
  },
  {
    "id": "12",
    "title": "Chat Archaeology Methodology",
    "description": "Systematic conversation review process for extracting backlog items and strategic decisions",
    "project": "core",
    "priority": "P2",
    "status": "todo",
    "created": "2025-05-26T20:40:00.000Z"
  },
  {
    "id": "13",
    "title": "Core vs Fork Detection CIT",
    "description": "Create decision framework CIT for core developers to define what belongs in core vs requires fork creation",
    "project": "core",
    "priority": "P0",
    "status": "done",
    "created": "2025-05-26T20:50:00.000Z",
    "dependencies": [
      "Core developer consensus on boundaries"
    ],
    "implementation": "CIT_CoreVsFork_Detection_20250526.md with clear criteria and examples"
  },
  {
    "id": "14",
    "title": "Scott Personal CIT Rename",
    "description": "Rename CIT_Personal_20250525.md to CIT_Personal_Scott_20250525.md to allow Dan's context addition",
    "project": "core",
    "priority": "P0",
    "status": "done",
    "created": "2025-05-26T20:50:00.000Z",
    "dependencies": [],
    "implementation": "Simple file rename + update references"
  },
  {
    "id": "15",
    "title": "Dan Personal Context Onboarding",
    "description": "Email Dan to upload existing personal CIT as-is, Claude will enhance through conversations",
    "project": "core",
    "priority": "P0",
    "status": "todo",
    "created": "2025-05-26T20:50:00.000Z",
    "dependencies": [
      "Scott CIT rename completed"
    ],
    "implementation": "Simple email: upload existing CIT, no template copying required"
  },
  {
    "id": "16",
    "title": "User Identification System",
    "description": "Claude logic to recognize which user is interacting and load appropriate personal CIT automatically",
    "project": "core",
    "priority": "P1",
    "status": "todo",
    "created": "2025-05-26T20:50:00.000Z",
    "dependencies": [
      "Multiple personal CITs exist"
    ],
    "implementation": "CIT template for user recognition patterns and context loading"
  },
  {
    "id": "17",
    "title": "Missing Personal Context Handler",
    "description": "When no personal CIT exists for user, provide instructions before answering request",
    "project": "core",
    "priority": "P1",
    "status": "todo",
    "created": "2025-05-26T20:50:00.000Z",
    "dependencies": [
      "User identification system"
    ],
    "implementation": "Template instructions for personal CIT creation and GitHub upload"
  },
  {
    "id": "18",
    "title": "Iterative Context Enhancement",
    "description": "One-question-at-a-time personal CIT building through conversation, adapting to user communication style",
    "project": "core",
    "priority": "P2",
    "status": "backlog",
    "created": "2025-05-26T20:50:00.000Z",
    "dependencies": [
      "Personal CIT framework established"
    ],
    "implementation": "Progressive questioning system with conversation pattern learning"
  },
  {
    "id": "19",
    "title": "Documentation Workflow Implementation",
    "description": "Real-time documentation alongside development - README, CITs, version history updated with every change",
    "project": "core",
    "priority": "P0",
    "status": "done",
    "created": "2025-05-26T21:00:00.000Z",
    "dependencies": [],
    "implementation": "CIT_Documentation_Workflow_20250526.md with mandatory practices and Claude enforcement"
  },
  {
    "id": "20",
    "title": "Claude Working Feedback Enhancement",
    "description": "Clearer indicators when Claude is processing/working, especially for longer artifact generation",
    "project": "core",
    "priority": "P2",
    "status": "backlog",
    "created": "2025-05-26T21:05:00.000Z",
    "dependencies": [],
    "implementation": "Scott has insights into what would make Claude's working state clearer for users"
  },
  {
    "id": "1748437920643",
    "title": "Update Context Organization",
    "description": "Ask Claude for help - need to get the core CITs into the garden/contexts folder\n\nthen other CITs need to be nested somehow - is there a permission we can apply so that Claude can see all of them but dan can only see dan and Scott can only see Scott?  or password protection?",
    "project": "core",
    "priority": "P0",
    "status": "backlog",
    "created": "2025-05-28T13:12:00.643Z"
  },
  {
    "id": "1748438076017",
    "title": "Pass New Architecture to Existing Documents",
    "description": "Can we automatically detect when an application (in core... maybe in the future in forks) is using an old architecture and alert dan & Scott to redevelop it? Would be cool to do this automatically, but maybe it's better, if we have a lean core, to have the human interaction.  that way we can also decide whether the updates should be standalone or go along with functionality... and whether the file is actually useful anymore!\n\nthis is critical for the backlog and the version history to match the new nodepad architecture, but we should break out the automation to be a medium priority item",
    "project": "core",
    "priority": "P0",
    "status": "backlog",
    "created": "2025-05-28T13:14:36.017Z"
  },
  {
    "id": "1748438354415",
    "title": "Backlog Data Entry Enhancement",
    "description": "It's cool to enter the critical details in - but we might not know them.  also, it doesn't leverage the capabilities of nodepad.  backlog entry should be able to be accomplished two ways (so one click to add or update an item, and then maybe two tabs on the entry form - one for each workflow):\n\nworkflow a: give me the minimum necessary fields (I think we've got them already) to be able to connect these nodes to other nodes and understand how this relates to others\n\nworkflow b: free text entry - I just have an idea and I don't know where it goes.\n\nalso need to learn what the tabs at the top do (they look like sorting tabs, but I'm not sure - so better labeling).  and get the functionality for auto-organizing in here (especially if we are going to be putting these things in with free text).\n\nMaybe there is another way to \"add new entry\" too - at the top, just a free text field that user can write stuff.  Claude will SUGGEST projects, criticality, and priority... but clearly note these are suggestions, and allow the user to change them before saving!",
    "project": "core",
    "priority": "P0",
    "status": "backlog",
    "created": "2025-05-28T13:19:14.415Z"
  },
  {
    "id": "1748438539456",
    "title": "!!!!! Edit Existing Doesn't Work",
    "description": "we should be able to edit existing - without losing backlog item history... that way if someone edits it and deletes a key detail, it can still be linked with other nodes (like if I deleted the title and the description... that backlog item still stays in the right spot even though It's got no content).\n\nwhile we're at it - some superuser privileges and guidelines - simple readme - to prevent mistakes",
    "project": "core",
    "priority": "P0",
    "status": "backlog",
    "created": "2025-05-28T13:22:19.456Z"
  }
]